"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EntityList = void 0;
const tslib_1 = require("tslib");
const dayjs_1 = tslib_1.__importDefault(require("dayjs"));
const user_agents_1 = tslib_1.__importDefault(require("user-agents"));
const split_proxy_1 = tslib_1.__importDefault(require("split-proxy"));
const https_proxy_agent_1 = require("https-proxy-agent");
class EntityList {
    entities;
    index;
    options;
    constructor(proxies, options) {
        this.options = options;
        this.entities = proxies ? proxies.map(proxy => this._createEntity(proxy)) : [this._createEntity()];
        this.index = 0;
    }
    ;
    _createCookie() {
        const data = {
            stockx_homepage: "sneakers",
            language_code: this.options.languageCode.toLowerCase(),
            stockx_selected_region: this.options.countryCode,
            stockx_preferred_market_activity: "sales",
            stockx_dismiss_modal: true,
            IR_gbd: "stockx.com",
            cookie_policy_accepted: true,
            stockx_product_visits: Math.floor(Math.random() * 10),
            stockx_default_sneakers_size: "All",
            OptanonConsent: new URLSearchParams([
                ["isGpcEnabled", "1"],
                ["datestamp", (0, dayjs_1.default)().format("ddd+MMM+DD+YYYY+HH%3Amm%3Ass+Z")],
                ["version", "6.36.0"],
                ["isIABGlobal", "false"],
                ["hosts", ""],
                ["consentId", "124f4404-36c7-437d-aeee-1b67d82251ee"],
                ["interactionCount", "1"],
                ["landingPath", "NotLandingPage"],
                ["groups", encodeURIComponent("C0001:1,C0002:1,C0005:1,C0004:1,C0003:1")]
            ]).toString(),
        };
        let cookie = "";
        for (const key in data) {
            cookie += `${key}=${data[key]}; `;
        }
        return cookie;
    }
    _createEntity(proxy) {
        const splitedProxy = proxy ? (0, split_proxy_1.default)(proxy) : undefined;
        return {
            httpsAgent: splitedProxy ? new https_proxy_agent_1.HttpsProxyAgent({
                host: splitedProxy.host,
                port: splitedProxy.port,
                auth: splitedProxy.login && splitedProxy.password ? `${splitedProxy.login}:${splitedProxy.password}` : undefined
            }) : undefined,
            userAgent: new user_agents_1.default().toString(),
            cookie: this._createCookie()
        };
    }
    getEntity() {
        const entity = this.entities[this.index];
        this.index = (this.index + 1) % this.entities.length;
        return entity;
    }
}
exports.EntityList = EntityList;
